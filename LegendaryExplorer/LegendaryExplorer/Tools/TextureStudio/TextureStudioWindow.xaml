<misc:NotifyPropertyChangedWindowBase x:Class="LegendaryExplorer.Tools.TextureStudio.TextureStudioWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:dd="urn:gong-wpf-dragdrop"
        xmlns:sharedUi="clr-namespace:LegendaryExplorer.SharedUI"
        xmlns:local="clr-namespace:LegendaryExplorer.Tools.TextureStudio"
        xmlns:sharedToolControls="clr-namespace:LegendaryExplorer.UserControls.SharedToolControls"
        xmlns:exportLoaderControls="clr-namespace:LegendaryExplorer.UserControls.ExportLoaderControls"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:converters="clr-namespace:LegendaryExplorer.SharedUI.Converters"
        xmlns:misc="clr-namespace:LegendaryExplorer.Misc" xmlns:i1="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:studio="clr-namespace:LegendaryExplorerCore.Textures.Studio;assembly=LegendaryExplorerCore"
        mc:Ignorable="d"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Closing="TextureStudioWindow_OnClosing"
        Icon="pack://application:,,,/Tools/Icons/16x16/TextureStudio_Icon_16.ico"
        Title="Texture Studio" MinHeight="800" MinWidth="1000" >
    <Window.Resources>
        <converters:NullVisibilityConverter x:Key="NullVisibilityConverter"/>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:GameToVisibilityConverter x:Key="GameToVisibilityConverter"/>
        <sharedUi:BindingProxy x:Key="bindingProxy" Data="{Binding}"/>
        <BitmapImage x:Key="packageicon" UriSource="pack://application:,,,/Tools/PackageEditor/ExportIcons/icon_package.png"/>
        <BitmapImage x:Key="textureicon" UriSource="pack://application:,,,/Tools/PackageEditor/ExportIcons/icon_texture2d.png"/>
        <ContextMenu x:Key="InstanceContextMenu">
            <MenuItem Header="Open instance in Package Editor" ToolTip="Opens a new Package Editor, focused on this instance" 
                      Command="{Binding Source={StaticResource bindingProxy}, Path=Data.OpenInstanceInPackageEditorCommand}" sharedUi:Bindings.VisibilityToEnabled="True">
                <MenuItem.Icon>
                    <Image Source="/Tools/Icons/packageeditorwpf_256x256.ico" Width="64"/>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
    </Window.Resources>
    <xctk:BusyIndicator IsBusy="{Binding IsBusy}">
        <xctk:BusyIndicator.BusyContentTemplate>
            <DataTemplate>
                <StackPanel DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Width="300">
                    <TextBlock Text="{Binding BusyHeader}" FontWeight="Bold" TextAlignment="Center"/>
                    <TextBlock Text="{Binding BusyText}"/>
                    <ProgressBar Value="{Binding BusyProgressValue}" Maximum="{Binding BusyProgressMaximum}" IsIndeterminate="{Binding BusyProgressIndeterminate}"  Margin="0,5,0,0" Height="15" />
                    <Button Content="Cancel" HorizontalAlignment="center" Margin="0,5,0,0" Padding="3"  Command="{Binding BusyCancelCommand}" />
                </StackPanel>
            </DataTemplate>
        </xctk:BusyIndicator.BusyContentTemplate>
        <xctk:BusyIndicator.ProgressBarStyle>
            <Style TargetType="ProgressBar" >
                <Setter Property="Visibility" Value="Collapsed"/>
            </Style>
        </xctk:BusyIndicator.ProgressBarStyle>
        <DockPanel>
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="File" Padding="4">
                    <MenuItem Header="Close workspace" Command="{Binding CloseWorkspaceCommand}"/>
                    <MenuItem Header="Recent workspaces" x:Name="Recents_MenuItem"/>
                </MenuItem>
                <MenuItem Header="Operations">
                    <MenuItem Header="Remove all empty mips" Command="{Binding RemoveAllEmptyMipsCommand}"/>
                    <MenuItem Header="ME1: Update master texture pointers" Command="{Binding ME1UpdateMasterPointersCommand}"/>
                    <MenuItem Header="ME1: Create a new master texture package" Command="{Binding ME1CreateNewMasterPackageCommand}"/>

                </MenuItem>
            </Menu>
            <StatusBar DockPanel.Dock="Bottom">
                <StatusBarItem Padding="2" VerticalContentAlignment="Center" Visibility="{Binding CurrentStudioGame, Converter={StaticResource GameToVisibilityConverter}, ConverterParameter='Not_Unknown'}">
                    <Border BorderBrush="Gray" BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" VerticalAlignment="Center">
                        <TextBlock Text="{Binding CurrentStudioGame}" FontSize="11" Foreground="White" Padding="4,3,4,3" FontFamily="Consolas" VerticalAlignment="Center"/>
                    </Border>
                </StatusBarItem>
                <StatusBarItem>
                    <TextBlock Text="{Binding StatusText}"/>
                </StatusBarItem>
            </StatusBar>
            <Grid>
                <DockPanel HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding SelectedFolder, Converter={StaticResource NullVisibilityConverter}, ConverterParameter='Reversed'}">
                    <TextBlock MaxWidth="600" TextAlignment="Center" FontWeight="Bold" DockPanel.Dock="Top" Text="Welcome to Texture Studio"/>
                    <TextBlock MaxWidth="600" TextAlignment="Center" DockPanel.Dock="Top" TextWrapping="Wrap"  Text="Texture Studio is Legendary Explorer's texturing tool, designed around the concept of changing all instances of the same texture (defined by having the same instanced full path) in a 'workspace', which is a folder of packages. This folder should be your mod folder, including any alternate files you are shipping in the mod. This tools is NOT for swapping textures in the entire game, for that, use Mass Effect Modder."/>

                    <Button 
                            DockPanel.Dock="Bottom"
                            Content="Open workspace"
                            Command="{Binding ScanFolderCommand}"
                            HorizontalAlignment="Center"
                            Padding="25,5"
                            Margin="10"/>
                    <sharedToolControls:RecentsControl x:Name="RecentsController" IsFolderRecents="True" HorizontalContentAlignment="Center"/>
                </DockPanel>
                <Grid
                    Visibility="{Binding SelectedFolder, Converter={StaticResource NullVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="150" Width="340"  MaxWidth="600"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition MinWidth="100" Width="380" MaxWidth="700"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="15"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Text="In-memory unique textures" Grid.Column="0" FontWeight="Bold" TextAlignment="Center" Background="{x:Static Brushes.Bisque}"/>
                <TextBlock Text="Package instances" Grid.Column="2" FontWeight="Bold" TextAlignment="Center" Background="{x:Static Brushes.Bisque}"/>
                <TextBlock Text="Texture Viewer for instance" Grid.Column="5" FontWeight="Bold" TextAlignment="Center" Background="{x:Static Brushes.Bisque}"/>
                <TreeView x:Name="LeftSide_TreeView" 
                          Visibility="{Binding SelectedFolder, Converter={StaticResource NullVisibilityConverter}}"
                          Grid.Column="0" 
                          Grid.Row="1"
                          FontFamily="Consolas"
                          SelectedItemChanged="SelectedTreeNodeChanged"
                          ItemsSource="{Binding AllRootTreeViewNodes}" 
                          FocusManager.IsFocusScope="True" 
                          VirtualizingStackPanel.IsVirtualizing="True" 
                          VirtualizingStackPanel.VirtualizationMode="Recycling">
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type local:TextureMapMemoryEntryWPF}" 
                                                  ItemsSource="{Binding Children}">
                            <Border Background="Transparent">
                                <DockPanel>
                                    <TextBlock DockPanel.Dock="Bottom" Text="{Binding Instances.BindableCount, StringFormat='{}{0} instances'}" 
                                               FontSize="10"
                                               TextWrapping="Wrap" VerticalAlignment="Center" 
                                               Visibility="{Binding IsTexture, Converter={StaticResource BoolToVisibilityConverter}}" />
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="16" Height="16" Margin="0,0,3,0">
                                            <Image.Style>
                                                <Style TargetType="{x:Type Image}">
                                                    <Setter Property="Source" Value="{StaticResource textureicon}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Value="False" Binding="{Binding IsTexture}">
                                                            <Setter Property="Source" Value="{StaticResource packageicon}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                        <TextBlock  Text="{Binding ObjectName}" VerticalAlignment="Center">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <DataTrigger Value="{x:Null}" Binding="{Binding Parent}">
                                                            <Setter Property="FontWeight" Value="Bold"/>
                                                            <Setter Property="FontSize" Value="14"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <StackPanel.Style>
                                            <Style TargetType="{x:Type StackPanel}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding HasUnmatchedCRCs}" Value="true">
                                                        <Setter Property="Background" Value="OrangeRed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Style>
                                    </StackPanel>
                                </DockPanel>
                                <i1:Interaction.Triggers>
                                    <d:EventTrigger EventName="PreviewMouseRightButtonDown">
                                        <i1:ChangePropertyAction PropertyName="IsSelected" Value="true" TargetObject="{Binding}"/>
                                    </d:EventTrigger>
                                </i1:Interaction.Triggers>
                            </Border>
                        </HierarchicalDataTemplate>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                      Color="LightBlue" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                      Color="Black" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                      Color="LightBlue" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                      Color="Black" />
                    </TreeView.Resources>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <!-- Items in the ItemsSource need to have these properties for the binding to work -->
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <!--<i:Interaction.Behaviors>
                        <sharedUi:NodeTreeSelectionBehavior SelectedItem="{Binding SelectedItem}" />
                    </i:Interaction.Behaviors>-->
                </TreeView>

                <GridSplitter Width="5"  Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Center" Grid.RowSpan="2"/>
                <DockPanel Grid.Column="2" Grid.Row="1">
                        <StatusBar DockPanel.Dock="Bottom">
                            <StatusBarItem>
                                <Button Content="Change all instances to new texture" ToolTip="Changes all instances of the texture to point to a new instance stored in the specified TFC."  Padding="5" Command="{Binding ChangeAllInstancesTextureCommand}"/>
                            </StatusBarItem>
                            <StatusBarItem HorizontalAlignment="Stretch">
                                <xctk:WatermarkTextBox Watermark="TFC: Textures_[Value]  " ToolTip="The TFC name to store textures into. The value provided is the suffix after 'Textures_', and must begin with DLC_MOD_.&#10;Example value: DLC_MOD_Spectre"  MinWidth="168"  HorizontalAlignment="Stretch" Text="{Binding TFCSuffix, UpdateSourceTrigger=PropertyChanged}"  Padding="5,5,0,5"/>
                            </StatusBarItem>
                        </StatusBar>
                    <ListBox ItemsSource="{Binding SelectedItem.Instances}" SelectedItem="{Binding SelectedInstance}">
                        <ListBox.Resources>
                            <DataTemplate DataType="{x:Type studio:TextureMapPackageEntry}">
                                <DockPanel ContextMenu="{StaticResource InstanceContextMenu}">
                                    <TextBlock DockPanel.Dock="Bottom" FontSize="10" 
                                               Visibility="{Binding TFCName, Converter={StaticResource NullVisibilityConverter}}">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="Located in {0}">
                                                <Binding Path="TFCName" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    <TextBlock DockPanel.Dock="Bottom" FontSize="10" 
                                               Visibility="{Binding MasterPackageName, Converter={StaticResource NullVisibilityConverter}}">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="Located in {0}">
                                                <Binding Path="MasterPackageName" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                        <TextBlock DockPanel.Dock="Bottom" FontSize="10">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="Export {0}, CRC 0x{1:X8}, {2} mips, {3} empty mips">
                                                <Binding Path="UIndex" />
                                                <Binding Path="CRC" />
                                                <Binding Path="NumMips" />
                                                <Binding Path="NumEmptyMips" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    <TextBlock Text="{Binding RelativePackagePath}"/>
                                </DockPanel>
                            </DataTemplate>
                        </ListBox.Resources>
                    </ListBox>
                </DockPanel>
                <GridSplitter Grid.Row="0"  Grid.Column="3" Grid.RowSpan="2" Width="5" VerticalAlignment="Stretch" HorizontalAlignment="Center"/>
                <exportLoaderControls:TextureViewerExportLoader x:Name="TextureViewer_ExportLoader"  Grid.Column="4" Grid.Row="1"
                                                                HostingControl="{Binding RelativeSource={RelativeSource AncestorType=Window}}"/>

            </Grid>
            </Grid>

        </DockPanel>
    </xctk:BusyIndicator>
</misc:NotifyPropertyChangedWindowBase>
